generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model augments_ranking {
  id                  String @id @db.VarChar
  numberOfAppearances Int    @default(0)
  sumOfPlacements     Int    @default(0)
  sumOfWins           Int    @default(0)
  icon                String
  name                String
}

model traits {
  id        String              @id
  icon      String
  name      String
  champions champions_ranking[]
}

model champions_ranking {
  id                  String   @id @db.VarChar
  numberOfAppearances Int      @default(0)
  sumOfPlacements     Int      @default(0)
  sumOfWins           Int      @default(0)
  icon                String
  name                String
  traits              traits[]
}

model general_data {
  totalNumberOfMatches       Int
  id                         Int    @id
  totalNumberOfComps         Int    @default(0)
  totalNumberOfCompsAnalysis Int    @default(8000)
  gameVersion                String
  lastChange                 BigInt @default(1669673526)
}

model items_ranking {
  id                  String @id
  numberOfAppearances Int    @default(0)
  sumOfPlacements     Int    @default(0)
  sumOfWins           Int    @default(0)
  type                String
  icon                String
  name                String
}

model compositionJSON {
  id                 BigInt          @id @default(autoincrement())
  json               Json?           @db.Json
  visibility         Boolean         @default(true)
  numberOfCompsFound Int             @default(4000)
  augments           compsAugments[]
  items              compsItems[]
}

model compsAugments {
  compId      BigInt
  comp        compositionJSON @relation(fields: [compId], references: [id])
  augmentId   String
  numOfTop4   Int
  numOfWins   Int
  numOfAppear Int

  @@id([compId, augmentId])
}

model compsItems {
  compId      BigInt
  comp        compositionJSON @relation(fields: [compId], references: [id])
  itemId      String
  numOfAppear Int
  unitId      String

  @@id([compId, itemId, unitId])
}

model userCompositionJSON {
  id   String @id
  json Json   @db.Json
}

model analysisJSON {
  id   String @id
  json Json   @db.Json
}

model augments_first_choice_ranking {
  id                  String @id @db.VarChar
  numberOfAppearances Int    @default(0)
  sumOfPlacements     Int    @default(0)
  sumOfWins           Int    @default(0)
  icon                String
  name                String
}

model augments_second_choice_ranking {
  id                  String @id @db.VarChar
  numberOfAppearances Int    @default(0)
  sumOfPlacements     Int    @default(0)
  sumOfWins           Int    @default(0)
  icon                String
  name                String
}

model augments_third_choice_ranking {
  id                  String @id @db.VarChar
  numberOfAppearances Int    @default(0)
  sumOfPlacements     Int    @default(0)
  sumOfWins           Int    @default(0)
  icon                String
  name                String
}

model users {
  id           Int     @id @default(autoincrement())
  email        String  @unique
  password     String
  userName     String?
  summonerName String?
  region       String?
}

model guides {
  title               String          @id
  description         String
  set                 String
  timeRead            Int
  date                String
  imageUrl            String
  borderColorUnitCost Int
  elements            guideElements[]
}

model guideElements {
  order      Int
  type       String
  content    String?
  guideTitle String
  guide      guides  @relation(fields: [guideTitle], references: [title])

  @@id([order, guideTitle])
}
